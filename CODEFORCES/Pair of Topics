//TIME COMPLEXITY: nested for loop => O(n^2)
//SPACE COMPLEXITY: created arrays of size n => O(n)

#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
using namespace std;

#define ff              first
#define ss              second
#define int             long long
#define pb              push_back
#define mp              make_pair
#define pii             pair<int,int>
#define vi              vector<int>
#define mii             map<int,int>
#define pqb             priority_queue<int>
#define pqs             priority_queue<int,vi,greater<int> >
#define setbits(x)      __builtin_popcountll(x)
#define zrobits(x)      __builtin_ctzll(x)
#define mod             1000000007
#define inf             1e18
#define ps(x,y)         fixed<<setprecision(y)<<x
#define mk(arr,n,type)  type *arr=new type[n];
#define w(x)            int x; cin>>x; while(x--)
#define FIO             ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)
//mt19937                 rng(chrono::steady_clock::now().time_since_epoch().count());
#define ll long long

#define MIN(a, b) a < b ? a : b
#define MAX(a, b) a > b ? a : b
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;
bool com(int a, int b)
{
    return a>b;
}
int32_t main()
{
    int n;cin>>n;
    int a[n],b[n],c[n];
    for(int i=0;i<n;i++)
        cin>>a[i];
    for(int i=0;i<n;i++)
        {cin>>b[i];c[i]=b[i]-a[i];}
    sort(c,c+n);
    int ans=0;
    //for(int i=0;i<n;i++)
    /*{
        cout<<c[i]<<" ";
    }*/
    //cout<<endl;
    for(int i=0;i<n;i++)
    { 
        auto it=lower_bound(c+i+1,c+n,-c[i]);
        int id=it-c;
        
        ans+=id-(i+1);//<<" ";
    }
    cout<<ans;
    return 0;
}
